package com.bignerdranch.android.thirty;

/**
 * Author: Annika Svedin
 * email: annika.svedin@gmail.com
 * */

import android.content.Intent;
import android.graphics.Typeface;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.TableLayout;
import android.widget.TableRow;
import android.widget.TextView;

import java.util.HashMap;

/**
 * This activity class is a part of the controller layer,
 * which controls the representation of the result_view.xml.
 */
public class ResultActivity extends AppCompatActivity {

    private static final String EXTRA_SCORE_BOARD =
            "com.bignerdranch.android.thirty.score_board";

    private HashMap<String, Integer> results;
    private TableLayout tableLayout;
    private int total = 0;

    /**
     * Assigns the HashMap with results to an instance variable.
     */
    private void fetchResults() {
        Intent intent = getIntent();
        results = (HashMap<String, Integer>)intent.getSerializableExtra(EXTRA_SCORE_BOARD);
    }

    /**
     * Generates a TextView that will fit the table.
     * @param text The text to be printed.
     * @return A TextField with the text.
     */
    private TextView generateTextView(String text) {
        TextView textView = new TextView(this);
        textView.setPadding(0, 0, 20, 10);
        textView.setTextSize(20);
        textView.setTypeface(null, Typeface.BOLD);
        textView.setText(text);

        return textView;
    }

    /**
     * Adds the current value to the total and
     * generates a TextView for representing the right column
     * of one row in the table.
     * @param value the value to be printed.
     * @return A new TextField.
     */
    private TextView setValueOnView(Integer value) {
        TextView valueView;

        if (value != null) {
            valueView = generateValueView(""+value+"");
            total += value;

        } else {
            valueView = generateValueView("");
        }

        return valueView;
    }

    /**
     * Generates a TextField for representing the right column
     * of one row in the table.
     * @param text the text to be printed.
     * @return a new TextView displaying the text.
     */
    private TextView generateValueView(String text) {
        TextView valueView = new TextView(this);
        valueView.setPadding(0, 0, 0, 10);
        valueView.setTextSize(20);
        valueView.setText(text);

        return valueView;
    }

    /**
     * Assembles the table for showing the results, by calling
     * generateTextView() and generateValueView() when looping
     * through the HashMap with results.
     */
    private void generateResultTable() {
        TextView valueView, categoryView;
        Integer value;
        TableRow row;

        for (int i = 3; i <= 12; i++) {
            row = new TableRow(this);
            if (i == 3) {
                categoryView = generateTextView("LOW");
                value = results.get("LOW");

            } else {
                categoryView = generateTextView("" + i + ": ");
                value = results.get(""+i);
            }

            valueView = setValueOnView(value);
            addViewToTable(row, categoryView, valueView);
        }
    }

    /**
     * Adds a TableRow generated by generateResultTable() to the tableLayout.
     * @param row the TableRow to be populated.
     * @param categoryView TextView representing the left column.
     * @param valueView TextView representing the right column.
     */
    private void addViewToTable(TableRow row, TextView categoryView, TextView valueView) {
        row.addView(categoryView);
        row.addView(valueView);
        tableLayout.addView(row);
    }

    /**
     * Generates the last row displaying the total score.
     * @return The TableRow.
     */
    private TableRow generateTotalRow() {
        TableRow row = new TableRow(this);

        TextView categoryView = new TextView(this);
        categoryView.setPadding(0, 0, 20, 10);
        categoryView.setTextSize(25);
        categoryView.setTypeface(null, Typeface.BOLD);
        categoryView.setText("Total: ");

        TextView valueView = new TextView(this);
        valueView.setTextSize(20);
        valueView.setText(""+ total +"");

        row.addView(categoryView);
        row.addView(valueView);

        return row;
    }

    @Override
    protected void onSaveInstanceState(Bundle savedInstanceState) {
        super.onSaveInstanceState(savedInstanceState);
    }

    /**
     * The first thing that happens when the activity is launched.
     * Initializes the widgets and the state of the activity,
     * by getting the scores and create a table displaying them.
     * @param savedInstanceState a bundle storing the state.
     */
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.result_view);

        fetchResults();
        tableLayout = (TableLayout) findViewById(R.id.result_view_table);

        generateResultTable();
        tableLayout.addView(generateTotalRow());
    }

    /**
     * Inflate the menu; this adds items to the action bar if it is present.
     * @param menu menu item to be put in the Action bar.
     * @return true when menu was inflated.
     */
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.menu_game, menu);
        return true;
    }

    /**
     * This activity is called with a startActivityForResult,
     * here the result is being sent back, depending on which button was clicked
     * in the Action bar.
     * @param item item representing what was clicked on in the Action Bar.
     * @return true if a message was sent to the parent activity.
     */
    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.restart_game) {
            Intent intent = new Intent();
            setResult(GameActivity.RESTART_CODE, intent);
            finish();

            return true;
        }

        if (id == android.R.id.home) {
            Intent intent = new Intent();
            setResult(GameActivity.NAVIGATE_UP_CODE, intent);
            finish();

            return true;
        }

        return super.onOptionsItemSelected(item);
    }
}